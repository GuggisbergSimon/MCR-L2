@startuml
'https://plantuml.com/class-diagram'
skinparam classAttributeIconSize 0
hide circle

!theme plain
top to bottom direction
skinparam linetype ortho

interface Displayer {
+getWidth():int
+getHeight():int
+getGraphics():Graphics2D
+repaint():void
+setTitle(title:String):void
+addKeyListener(ka:KeyListener):void
}

class Display {
-{static} INIT_WIDTH:int
-{static} INIT_HEIGHT:int
-{static} instance:Display
-frame:JFrame
-panel:JPanel
-image:Image
-graphics:Graphics2D
+{static} getInstance():Display
-Display()
-Display(width:int, height:int)
-setSize(width:int, height:int):void
}

interface Renderer <<interface>> {
+void display(g:Graphics2D, b:Bouncable):void
}

abstract class AbstractRenderer

class BorderRenderer {
-{static} STROKE_WIDTH:int
-{static} instance:Renderer
+{static} getInstance():Renderer
}

class FilledRenderer {
-{static} instance:Renderer
+{static} getInstance():Renderer
}

class Bouncers {
-{static} TITLE:String
-{static} NB_SPAWN:int
-{static} REFRESH_MS:int
+{static} main(args:String[]):void
-Bouncers()
-generateShapes(factory:ShapeFactory):void
-run():void

}
interface Bouncable <<interface>>{
+draw():void
+move():void
+getColor():Color
+getShape():Shape
}

abstract class BouncableShape {
-{static} RANDOM:Random
-{static} MIN_SIZE:int
-{static} MAX_SIZE:int
-{static} MIN_SPEED:int
-{static} MAX_SPEED:int
-color:Color
#size:int
#x:int
#y:int
#dx:int
#dy:int
-{static} getRandomSpeed():int
+BouncableShape(color:Color)
}

abstract class Square {
+Square(color:Color)
}

abstract class Circle {
+Circle(color:Color)
}

class CircleFilled {
+CircleFilled()
}

class SquareFilled {
+SquareFilled()
}

class CircleBorder {
+CircleBorder()
}

class SquareBorder {
+SquareBorder()
}

interface ShapeFactory <<interface>> {
+createSquare():Square
+createCircle():Circle
}

class FactoryFilled {
}

class FactoryBorder {
}

Display -up-|> Displayer

AbstractRenderer -up-|> Renderer
BorderRenderer -up-|> AbstractRenderer
FilledRenderer -up-|> AbstractRenderer

BouncableShape -up-|> Bouncable

Square -up-|> BouncableShape
Circle -up-|> BouncableShape

CircleFilled -up-|> Circle
CircleBorder -up-|> Circle

SquareFilled -up-|> Square
SquareBorder -up-|> Square

FactoryFilled -up-|> ShapeFactory
FactoryBorder -up-|> ShapeFactory

Bouncers "1" -- "2" ShapeFactory : uses v
Bouncable "*" -- "1"Bouncers : is owned v

@enduml